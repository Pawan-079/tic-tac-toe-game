{"ast":null,"code":"import React,{useState,useEffect}from'react';import Board from'./Board';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[board,setBoard]=useState(Array(9).fill(null));const[isXNext,setIsXNext]=useState(true);const[isComputer,setIsComputer]=useState(true);// Toggle for computer player\nconst[winner,setWinner]=useState(null);const[gameStatus,setGameStatus]=useState('Your Chance');// Default message\nconst calculateWinner=squares=>{const lines=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];for(let line of lines){const[a,b,c]=line;if(squares[a]&&squares[a]===squares[b]&&squares[a]===squares[c]){return squares[a];}}return null;};const handleClick=index=>{if(winner||board[index])return;const newBoard=board.slice();newBoard[index]=isXNext?'X':'O';setBoard(newBoard);setIsXNext(!isXNext);setGameStatus(isXNext?\"Computer's Chance\":'Your Chance');};const resetGame=()=>{setBoard(Array(9).fill(null));setIsXNext(true);setWinner(null);setGameStatus('Your Chance');};// Function for the computer to make a move\nconst computerMove=()=>{if(!isXNext&&isComputer){const emptySquares=board.map((val,idx)=>val===null?idx:null).filter(val=>val!==null);const bestMove=minimax(board,'O').index;if(emptySquares.length>0){handleClick(bestMove);}}};// Minimax algorithm for computer's best move\nconst minimax=(newBoard,player)=>{const availableSpots=newBoard.map((val,idx)=>val===null?idx:null).filter(val=>val!==null);const huPlayer='X';const aiPlayer='O';if(calculateWinner(newBoard)===huPlayer)return{score:-10};if(calculateWinner(newBoard)===aiPlayer)return{score:10};if(availableSpots.length===0)return{score:0};const moves=[];for(let i=0;i<availableSpots.length;i++){const move={};move.index=availableSpots[i];newBoard[availableSpots[i]]=player;if(player===aiPlayer){const result=minimax(newBoard,huPlayer);move.score=result.score;}else{const result=minimax(newBoard,aiPlayer);move.score=result.score;}newBoard[availableSpots[i]]=null;moves.push(move);}let bestMove;if(player===aiPlayer){let bestScore=-Infinity;for(let i=0;i<moves.length;i++){if(moves[i].score>bestScore){bestScore=moves[i].score;bestMove=i;}}}else{let bestScore=Infinity;for(let i=0;i<moves.length;i++){if(moves[i].score<bestScore){bestScore=moves[i].score;bestMove=i;}}}return moves[bestMove];};useEffect(()=>{const winner=calculateWinner(board);if(winner){setWinner(winner);setGameStatus(winner==='X'?'You Win!':'Computer Wins!');alert(winner==='X'?'You Win!':'Computer Wins!');}else if(!board.includes(null)){setGameStatus('Draw Game');alert('Draw Game!');}else if(!isXNext&&isComputer){computerMove();}},[board]);return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Tic-Tac-Toe\"}),/*#__PURE__*/_jsx(Board,{squares:board,onClick:handleClick}),/*#__PURE__*/_jsxs(\"div\",{className:\"info\",children:[/*#__PURE__*/_jsx(\"p\",{children:gameStatus}),/*#__PURE__*/_jsx(\"button\",{onClick:resetGame,children:\"Restart Game\"})]})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","Board","jsx","_jsx","jsxs","_jsxs","App","board","setBoard","Array","fill","isXNext","setIsXNext","isComputer","setIsComputer","winner","setWinner","gameStatus","setGameStatus","calculateWinner","squares","lines","line","a","b","c","handleClick","index","newBoard","slice","resetGame","computerMove","emptySquares","map","val","idx","filter","bestMove","minimax","length","player","availableSpots","huPlayer","aiPlayer","score","moves","i","move","result","push","bestScore","Infinity","alert","includes","className","children","onClick"],"sources":["C:/Users/pkg73/OneDrive/Documents/GitHub/tic-tac-toe-game/src/App.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport Board from './Board';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [board, setBoard] = useState(Array(9).fill(null));\r\n  const [isXNext, setIsXNext] = useState(true);\r\n  const [isComputer, setIsComputer] = useState(true); // Toggle for computer player\r\n  const [winner, setWinner] = useState(null);\r\n  const [gameStatus, setGameStatus] = useState('Your Chance'); // Default message\r\n\r\n  const calculateWinner = (squares) => {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let line of lines) {\r\n      const [a, b, c] = line;\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const handleClick = (index) => {\r\n    if (winner || board[index]) return;\r\n\r\n    const newBoard = board.slice();\r\n    newBoard[index] = isXNext ? 'X' : 'O';\r\n    setBoard(newBoard);\r\n    setIsXNext(!isXNext);\r\n    setGameStatus(isXNext ? \"Computer's Chance\" : 'Your Chance');\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setBoard(Array(9).fill(null));\r\n    setIsXNext(true);\r\n    setWinner(null);\r\n    setGameStatus('Your Chance');\r\n  };\r\n\r\n  // Function for the computer to make a move\r\n  const computerMove = () => {\r\n    if (!isXNext && isComputer) {\r\n      const emptySquares = board.map((val, idx) => val === null ? idx : null).filter(val => val !== null);\r\n      const bestMove = minimax(board, 'O').index;\r\n      if (emptySquares.length > 0) {\r\n        handleClick(bestMove);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Minimax algorithm for computer's best move\r\n  const minimax = (newBoard, player) => {\r\n    const availableSpots = newBoard.map((val, idx) => val === null ? idx : null).filter(val => val !== null);\r\n    const huPlayer = 'X';\r\n    const aiPlayer = 'O';\r\n\r\n    if (calculateWinner(newBoard) === huPlayer) return { score: -10 };\r\n    if (calculateWinner(newBoard) === aiPlayer) return { score: 10 };\r\n    if (availableSpots.length === 0) return { score: 0 };\r\n\r\n    const moves = [];\r\n\r\n    for (let i = 0; i < availableSpots.length; i++) {\r\n      const move = {};\r\n      move.index = availableSpots[i];\r\n      newBoard[availableSpots[i]] = player;\r\n\r\n      if (player === aiPlayer) {\r\n        const result = minimax(newBoard, huPlayer);\r\n        move.score = result.score;\r\n      } else {\r\n        const result = minimax(newBoard, aiPlayer);\r\n        move.score = result.score;\r\n      }\r\n\r\n      newBoard[availableSpots[i]] = null;\r\n      moves.push(move);\r\n    }\r\n\r\n    let bestMove;\r\n    if (player === aiPlayer) {\r\n      let bestScore = -Infinity;\r\n      for (let i = 0; i < moves.length; i++) {\r\n        if (moves[i].score > bestScore) {\r\n          bestScore = moves[i].score;\r\n          bestMove = i;\r\n        }\r\n      }\r\n    } else {\r\n      let bestScore = Infinity;\r\n      for (let i = 0; i < moves.length; i++) {\r\n        if (moves[i].score < bestScore) {\r\n          bestScore = moves[i].score;\r\n          bestMove = i;\r\n        }\r\n      }\r\n    }\r\n\r\n    return moves[bestMove];\r\n  };\r\n\r\n  useEffect(() => {\r\n    const winner = calculateWinner(board);\r\n    if (winner) {\r\n      setWinner(winner);\r\n      setGameStatus(winner === 'X' ? 'You Win!' : 'Computer Wins!');\r\n      alert(winner === 'X' ? 'You Win!' : 'Computer Wins!');\r\n    } else if (!board.includes(null)) {\r\n      setGameStatus('Draw Game');\r\n      alert('Draw Game!');\r\n    } else if (!isXNext && isComputer) {\r\n      computerMove();\r\n    }\r\n  }, [board]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Tic-Tac-Toe</h1>\r\n      <Board squares={board} onClick={handleClick} />\r\n      <div className=\"info\">\r\n        <p>{gameStatus}</p>\r\n        <button onClick={resetGame}>Restart Game</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}